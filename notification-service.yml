# Configuration du serveur
server:
  port: 8085

# Configuration de la base de données MySQL avec R2DBC
spring:
  r2dbc:
    url: r2dbc:mysql://localhost:3306/sirh_notification_service
    username: root
    password: ""

  # Configuration de Flyway pour la gestion du schéma
  flyway:
    enabled: false
    url: jdbc:mysql://localhost:3306/sirh_notification_service
    user: root
    password: ""
    locations: classpath:db/migration
    baseline-on-migrate: true # Utile pour les bases existantes

  # Configuration de Kafka
  kafka:
    consumer:
      bootstrap-servers: kafka:9092
      group-id: sirh-notification-consumer
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        # Indique à Spring de faire confiance aux packages pour la désérialisation JSON
        spring.json.trusted.packages: '*'
        # Spécifie la classe cible par défaut pour la désérialisation de la valeur.
        spring.json.value.default.type: com.ngombe.sirh.notification.dto.NotificationEventDto
        # Force le désérialiseur à ignorer l'en-tête de type, évitant ainsi l'erreur de "Class not found".
        spring.json.use.type.headers: false
    listener:
      ack-mode: manual
    template:
      default-topic: sirh-notifications

# Configuration Eureka
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka
  instance:
    hostname: localhost
    prefer-ip-address: true

# Nom du topic Kafka (configuration personnalisée)
notification:
  kafka:
    topic: sirh-notifications

